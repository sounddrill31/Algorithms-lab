name: Compile C and Create Releases

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Compile all C files and create/update releases
      run: |
        files_to_compile=$(find . -name "*.c" -print | sed 's/^\.\///' | sort)

        if [[ -z "$files_to_compile" ]]; then
          echo "No C files found to compile. Exiting."
          exit 0
        fi

        for file in $files_to_compile; do
          filename=$(basename "$file" .c)
          binary_name="$filename"

          echo "--- Processing: $file ---"

          if ! gcc -Wall -Wextra -g "$file" -o "$binary_name"; then
            echo "Error: Compilation failed for $file. Check the logs for details."
            exit 1
          fi
          echo "Successfully compiled $file into $binary_name"

          release_title=$(echo "$filename" | sed -E 's/(.*)-(.*)-(.*)/\u\1 \u\2 (\u\3)/g' | sed 's/-/ /g')

          existing_release_tag=$(gh release list --json tagName -q '.[].tagName' | grep -E "^$filename$")

          if [ -z "$existing_release_tag" ]; then
            echo "Creating new release '$filename'..."
            gh release create "$filename" \
              --title "$release_title" \
              --notes "Compiled binary for $file" \
              "$binary_name"
            echo "Release '$filename' created."
          else
            echo "Release '$filename' already exists. Updating binary asset..."
            gh release upload "$filename" "$binary_name" --clobber
            echo "Binary asset for release '$filename' updated."
          fi
          echo "--- Finished processing: $file ---"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
